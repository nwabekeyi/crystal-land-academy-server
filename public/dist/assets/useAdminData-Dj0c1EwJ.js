import{r,a as h,e as a,S as P,T as d,P as Q,Q as q,U as K,V as W}from"./index-qmmqHzY5.js";import{u}from"./useApi-CFpppkIv.js";import{u as X}from"./MenuItem-CyVMp_O5.js";const ae=()=>{const[Z,U]=r.useState([]),[$,_]=r.useState([]),s=X(),k=h(e=>e.adminData.academicYears)||[],z=h(e=>e.adminData.currentAcademicYear),j=h(e=>e.adminData.classLevels)||[],J=h(e=>e.adminData.subjects)||[];console.log("Redux classLevels:",j);const{loading:I,data:c,error:m,callApi:v}=u(),{loading:x,data:o,error:g,callApi:F}=u(),{loading:M,data:n,error:f,callApi:G}=u(),{loading:O,data:l,error:E,callApi:y}=u(),{loading:V,data:t,error:A,callApi:R}=u(),{loading:B,data:i,error:C,callApi:D}=u(),N=r.useCallback(()=>(console.log("Fetching students from:",a.STUDENTS),v(a.STUDENTS,"GET")),[v]),w=r.useCallback(()=>(console.log("Fetching teachers from:",a.TEACHERS),F(a.TEACHERS,"GET")),[F]),Y=r.useCallback(()=>(console.log("Fetching academic years from:",a.ACADEMIC_YEARS),G(a.ACADEMIC_YEARS,"GET")),[G]),L=r.useCallback(()=>(console.log("Fetching current academic year from:",a.CURRENT_ACADEMIC_YEAR),y(a.CURRENT_ACADEMIC_YEAR,"GET")),[y]),T=r.useCallback(()=>(console.log("Fetching class levels from:",a.CLASS_LEVEL),R(a.CLASS_LEVEL,"GET")),[R]),b=r.useCallback(()=>(console.log("Fetching subjects from:",a.SUBJECT),D(a.SUBJECT,"GET")),[D]);r.useEffect(()=>{N(),w(),Y(),L(),T(),b()},[N,w,Y,L,T,b]),r.useEffect(()=>{if(c||o){console.log("Students Data:",c),console.log("Teachers Data:",o);const e=(c==null?void 0:c.data)||[],p=(o==null?void 0:o.data)||[];U(S=>JSON.stringify(S)!==JSON.stringify(e)?e:S),_(S=>JSON.stringify(S)!==JSON.stringify(p)?p:S),s(P({students:e,teachers:p}))}m&&(console.error("Students Error:",m),s(d(m.message||"Failed to fetch students."))),g&&(console.error("Teachers Error:",g),s(d(g.message||"Failed to fetch teachers.")))},[c,o,m,g,s]),r.useEffect(()=>{if(n){console.log("Academic Years Data:",n);const e=(n==null?void 0:n.data)||[];s(Q(e))}f&&(console.error("Academic Years Error:",f),s(d(f.message||"Failed to fetch academic years.")))},[n,f,s]),r.useEffect(()=>{if(l){console.log("Current Academic Year Data:",l);const e=(l==null?void 0:l.data)||null;s(q(e))}E&&(console.error("Current Academic Year Error:",E),s(d(E.message||"Failed to fetch current academic year.")))},[l,E,s]),r.useEffect(()=>{if(console.log("Class Levels Data:",t),t){const e=Array.isArray(t)?t:(t==null?void 0:t.data)||(t==null?void 0:t.classLevels)||[];console.log("New Class Levels to Dispatch:",e),e.length===0&&console.warn("Class levels data is empty. Is this expected?"),s(K(e))}A&&(console.error("Class Levels Error:",A),s(d(A.message||"Failed to fetch class levels.")))},[t,A,s]),r.useEffect(()=>{if(i){console.log("Subjects Data:",i);const e=(i==null?void 0:i.data)||[];s(W(e))}C&&(console.error("Subjects Error:",C),s(d(C.message||"Failed to fetch subjects.")))},[i,C,s]);const H=[m,g,f,E,A,C].find(e=>e)||null;return{usersData:{students:(c==null?void 0:c.data)||[],teachers:(o==null?void 0:o.data)||[]},academicYears:k,currentAcademicYear:z,classLevels:j,subjects:J,loading:I||x||M||O||V||B,error:H,refetchAcademicYears:Y,refetchCurrentYear:L,refetchClassLevels:T,refetchSubjects:b}};export{ae as u};
