import{r,a as Y,e as a,K as $,M as u,I as P,J as W,N as X,O as Z}from"./index-7kxS6xuY.js";import{u as m}from"./useApi-Dfr_qw0I.js";import{u as ee}from"./MenuItem-qVplZ4W9.js";const oe=()=>{const[se,k]=r.useState([]),[re,I]=r.useState([]),[_,J]=r.useState(0),s=ee(),q=Y(e=>e.adminData.academicYears)||[],z=Y(e=>e.adminData.currentAcademicYear),j=Y(e=>e.adminData.classLevels)||[],M=Y(e=>e.adminData.subjects)||[];console.log("Redux classLevels:",j);const{loading:O,data:c,error:E,callApi:y}=m(),{loading:x,data:o,error:f,callApi:F}=m(),{loading:B,data:l,error:g,callApi:v}=m(),{loading:H,data:i,error:C,callApi:w}=m(),G=r.useCallback(async()=>{try{const e=await fetch(`${a.ENQUIRIES}?status=unread`);if(!e.ok)throw new Error("Failed to fetch unread enquiries");const n=(await e.json()).data||[];J(n.length)}catch(e){console.error("Error fetching unread enquiries:",e)}},[]),{loading:V,data:t,error:h,callApi:R}=m(),{loading:K,data:d,error:A,callApi:N}=m(),U=r.useCallback(()=>(console.log("Fetching students from:",a.STUDENTS),y(a.STUDENTS,"GET")),[y]),D=r.useCallback(()=>(console.log("Fetching teachers from:",a.TEACHERS),F(a.TEACHERS,"GET")),[F]),L=r.useCallback(()=>(console.log("Fetching academic years from:",a.ACADEMIC_YEARS),v(a.ACADEMIC_YEARS,"GET")),[v]),T=r.useCallback(()=>(console.log("Fetching current academic year from:",a.CURRENT_ACADEMIC_YEAR),w(a.CURRENT_ACADEMIC_YEAR,"GET")),[w]),b=r.useCallback(()=>(console.log("Fetching class levels from:",a.CLASS_LEVEL),R(a.CLASS_LEVEL,"GET")),[R]),p=r.useCallback(()=>(console.log("Fetching subjects from:",a.SUBJECT),N(a.SUBJECT,"GET")),[N]);r.useEffect(()=>{U(),D(),L(),T(),G(),b(),p()},[U,D,L,T,G,b,p]),r.useEffect(()=>{if(c||o){console.log("Students Data:",c),console.log("Teachers Data:",o);const e=(c==null?void 0:c.data)||[],S=(o==null?void 0:o.data)||[];k(n=>JSON.stringify(n)!==JSON.stringify(e)?e:n),I(n=>JSON.stringify(n)!==JSON.stringify(S)?S:n),s($({students:e,teachers:S}))}E&&(console.error("Students Error:",E),s(u(E.message||"Failed to fetch students."))),f&&(console.error("Teachers Error:",f),s(u(f.message||"Failed to fetch teachers.")))},[c,o,E,f,s]),r.useEffect(()=>{if(l){console.log("Academic Years Data:",l);const e=(l==null?void 0:l.data)||[];s(P(e))}g&&(console.error("Academic Years Error:",g),s(u(g.message||"Failed to fetch academic years.")))},[l,g,s]),r.useEffect(()=>{if(i){console.log("Current Academic Year Data:",i);const e=(i==null?void 0:i.data)||null;s(W(e))}C&&(console.error("Current Academic Year Error:",C),s(u(C.message||"Failed to fetch current academic year.")))},[i,C,s]),r.useEffect(()=>{if(console.log("Class Levels Data:",t),t){const e=Array.isArray(t)?t:(t==null?void 0:t.data)||(t==null?void 0:t.classLevels)||[];console.log("New Class Levels to Dispatch:",e),e.length===0&&console.warn("Class levels data is empty. Is this expected?"),s(X(e))}h&&(console.error("Class Levels Error:",h),s(u(h.message||"Failed to fetch class levels.")))},[t,h,s]),r.useEffect(()=>{if(d){console.log("Subjects Data:",d);const e=(d==null?void 0:d.data)||[];s(Z(e))}A&&(console.error("Subjects Error:",A),s(u(A.message||"Failed to fetch subjects.")))},[d,A,s]);const Q=[E,f,g,C,h,A].find(e=>e)||null;return{usersData:{students:(c==null?void 0:c.data)||[],teachers:(o==null?void 0:o.data)||[]},academicYears:q,currentAcademicYear:z,unreadEnquiriesCount:_,classLevels:j,subjects:M,loading:O||x||B||H||V||K,error:Q,refetchAcademicYears:L,refetchCurrentYear:T,refetchClassLevels:b,refetchSubjects:p}};export{oe as u};
