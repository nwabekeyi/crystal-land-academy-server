import{r as o}from"./index-B-gfigdE.js";const y=()=>{const[m,p]=o.useState(!1),[h,T]=o.useState(null),[w,g]=o.useState(null),r=o.useRef(!0);o.useEffect(()=>()=>{console.log("Cleaning up useApi"),r.current=!1},[]);const S=o.useCallback(async(c,f="GET",t=null,E={})=>{const A=new AbortController;console.log(`API call initiated: URL=${c}, Method=${f}, Body=`,t instanceof FormData?"[FormData]":t),r.current&&(p(!0),g(null));const l=sessionStorage.getItem("accessToken");console.log(`Access Token: ${l}`);const i={...E.headers};l&&(i.Authorization=`Bearer ${l}`),t instanceof FormData||(i["Content-Type"]="application/json");const u={method:f,headers:i,body:t&&!(t instanceof FormData)?JSON.stringify(t):t,signal:A.signal};console.log("Request options:",{...u,body:t instanceof FormData?"[FormData]":u.body});try{const e=await fetch(c,u);if(console.log(`Response status: ${e.status}, Headers:`,Object.fromEntries(e.headers)),!e.ok){let n=`HTTP error ${e.status}`;try{if((e.headers.get("Content-Type")||"").includes("application/json")){const a=await e.json();n=a.message||n,console.log("Error response (JSON):",a)}else{const a=await e.text();console.log("Error response (Non-JSON):",a),n=a||`Server returned status ${e.status}`}}catch(d){console.error("Failed to parse response:",d,`Status: ${e.status}`),n=`Invalid response from server (Status: ${e.status})`}throw new Error(n)}const D=e.headers.get("Content-Type")||"";let s;return D.includes("application/json")?s=await e.json():(s=await e.text(),console.log("Non-JSON success response:",s)),console.log("Response data:",s),r.current&&T(s),s}catch(e){throw e.name==="AbortError"?(console.log("Request aborted:",c),e):(console.error("Error during API call:",e.message,e.stack),r.current&&g(e.message||"Something went wrong"),e)}finally{r.current&&p(!1)}},[]);return{loading:m,data:h,error:w,callApi:S}};export{y as u};
