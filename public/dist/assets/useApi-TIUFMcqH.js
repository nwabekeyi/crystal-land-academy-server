import{r as t}from"./index-BgVW12L4.js";const D=()=>{const[g,i]=t.useState(!1),[d,h]=t.useState(null),[w,l]=t.useState(null),r=t.useRef(!0);t.useEffect(()=>()=>{r.current=!1},[]);const T=t.useCallback(async(u,m="GET",s=null,S={})=>{const E=new AbortController;r.current&&(i(!0),l(null));const p=sessionStorage.getItem("accessToken"),a={...S.headers};p&&(a.Authorization=`Bearer ${p}`),s instanceof FormData||(a["Content-Type"]="application/json");const y={method:m,headers:a,body:s&&!(s instanceof FormData)?JSON.stringify(s):s,signal:E.signal};try{const e=await fetch(u,y);if(!e.ok){let o=`HTTP error ${e.status}`;try{if((e.headers.get("Content-Type")||"").includes("application/json"))o=(await e.json()).message||o;else{const c=await e.text();console.log("Error response (Non-JSON):",c),o=c||`Server returned status ${e.status}`}}catch(f){console.error("Failed to parse response:",f,`Status: ${e.status}`),o=`Invalid response from server (Status: ${e.status})`}throw new Error(o)}const A=e.headers.get("Content-Type")||"";let n;return A.includes("application/json")?n=await e.json():n=await e.text(),r.current&&h(n),n}catch(e){throw e.name==="AbortError"?(console.log("Request aborted:",u),e):(console.error("Error during API call:",e.message,e.stack),r.current&&l(e.message||"Something went wrong"),e)}finally{r.current&&i(!1)}},[]);return{loading:g,data:d,error:w,callApi:T}};export{D as u};
