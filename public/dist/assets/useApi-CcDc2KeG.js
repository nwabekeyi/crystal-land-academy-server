import{r as t}from"./index-Dia3dXnv.js";const C=()=>{const[w,c]=t.useState(!1),[d,h]=t.useState(null),[m,i]=t.useState(null),n=t.useRef(!0);t.useEffect(()=>()=>{console.log("Cleaning up useApi"),n.current=!1},[]);const A=t.useCallback(async(r,u="GET",o=null,E={})=>{const S=new AbortController;console.log(`API call initiated: URL=${r}, Method=${u}, Body=`,o),n.current&&(c(!0),i(null));const a=sessionStorage.getItem("accessToken");console.log(`Access Token: ${a}`);const l={...E.headers};a&&(l.Authorization=`Bearer ${a}`),o instanceof FormData||(l["Content-Type"]="application/json");const g={method:u,headers:l,body:o&&!(o instanceof FormData)?JSON.stringify(o):o,signal:S.signal};console.log("Request options:",g);try{const e=await fetch(r,g);if(console.log(`Response status: ${e.status}`),!e.ok){const p=await e.json();throw console.log("Error response:",p),new Error(p.message||"Something went wrong")}const f=e.headers.get("Content-Type");let s;return f&&f.includes("application/json")?s=await e.json():s=await e.text(),console.log("Response data:",s),n.current&&h(s),s}catch(e){return e.name==="AbortError"?(console.log("Request aborted:",r),null):(console.error("Error during API call:",e),n.current&&i(e.message||"Something went wrong"),null)}finally{n.current&&c(!1)}},[]);return{loading:w,data:d,error:m,callApi:A}};export{C as u};
